# Configuration file
# key = value
quarkus.swagger-ui.always-include=true

kogito.dataindex.url=localhost:8180/graphql

quarkus.infinispan-client.server-list=localhost:11222

mp.messaging.incoming.visasapproved.bootstrap.servers=localhost:9092
mp.messaging.incoming.visasapproved.connector=smallrye-kafka
mp.messaging.incoming.visasapproved.topic=visasapproved
mp.messaging.incoming.visasapproved.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.incoming.visasrejected.bootstrap.servers=localhost:9092
mp.messaging.incoming.visasrejected.connector=smallrye-kafka
mp.messaging.incoming.visasrejected.topic=visasrejected
mp.messaging.incoming.visasrejected.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.outgoing.visaapplications.bootstrap.servers=localhost:9092
mp.messaging.outgoing.visaapplications.connector=smallrye-kafka
mp.messaging.outgoing.visaapplications.topic=visaapplications
mp.messaging.outgoing.visaapplications.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.kogito-processinstances-events.bootstrap.servers=localhost:9092
mp.messaging.outgoing.kogito-processinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-processinstances-events.topic=kogito-processinstances-events
mp.messaging.outgoing.kogito-processinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.kogito-usertaskinstances-events.bootstrap.servers=localhost:9092
mp.messaging.outgoing.kogito-usertaskinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-usertaskinstances-events.topic=kogito-usertaskinstances-events
mp.messaging.outgoing.kogito-usertaskinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer


#
# openshift profile to easily run on OpenShift without much environment variables
#

%openshift.quarkus.infinispan-client.server-list=infinispan-server:11222

%openshift.mp.messaging.incoming.visasapproved.bootstrap.servers=my-cluster-kafka-bootstrap:9092
%openshift.mp.messaging.incoming.visasapproved.connector=smallrye-kafka
%openshift.mp.messaging.incoming.visasapproved.topic=visasapproved
%openshift.mp.messaging.incoming.visasapproved.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

%openshift.mp.messaging.incoming.visasrejected.bootstrap.servers=my-cluster-kafka-bootstrap:9092
%openshift.mp.messaging.incoming.visasrejected.connector=smallrye-kafka
%openshift.mp.messaging.incoming.visasrejected.topic=visasrejected
%openshift.mp.messaging.incoming.visasrejected.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

%openshift.mp.messaging.outgoing.visaapplications.bootstrap.servers=my-cluster-kafka-bootstrap:9092
%openshift.mp.messaging.outgoing.visaapplications.connector=smallrye-kafka
%openshift.mp.messaging.outgoing.visaapplications.topic=visaapplications
%openshift.mp.messaging.outgoing.visaapplications.value.serializer=org.apache.kafka.common.serialization.StringSerializer

%openshift.mp.messaging.outgoing.kogito-processinstances-events.bootstrap.servers=my-cluster-kafka-bootstrap:9092
%openshift.mp.messaging.outgoing.kogito-processinstances-events.connector=smallrye-kafka
%openshift.mp.messaging.outgoing.kogito-processinstances-events.topic=kogito-processinstances-events
%openshift.mp.messaging.outgoing.kogito-processinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

%openshift.mp.messaging.outgoing.kogito-usertaskinstances-events.bootstrap.servers=my-cluster-kafka-bootstrap:9092
%openshift.mp.messaging.outgoing.kogito-usertaskinstances-events.connector=smallrye-kafka
%openshift.mp.messaging.outgoing.kogito-usertaskinstances-events.topic=kogito-usertaskinstances-events
%openshift.mp.messaging.outgoing.kogito-usertaskinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer